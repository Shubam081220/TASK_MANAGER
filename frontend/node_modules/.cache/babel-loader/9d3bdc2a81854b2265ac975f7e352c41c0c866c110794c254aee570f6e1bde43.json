{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sasho\\\\task-manager\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE = \"http://localhost:5000/api/tasks\";\nfunction App() {\n  _s();\n  const [tasks, setTasks] = useState([]);\n  const [title, setTitle] = useState('');\n  const [description, setDescription] = useState('');\n\n  // Fetch tasks\n  const fetchTasks = async () => {\n    const res = await fetch(API_BASE);\n    const data = await res.json();\n    setTasks(data);\n  };\n\n  // Create task\n  const createTask = async () => {\n    await fetch(API_BASE, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        title,\n        description\n      })\n    });\n    setTitle('');\n    setDescription('');\n    fetchTasks();\n  };\n\n  // Delete task\n  const deleteTask = async id => {\n    await fetch(`${API_BASE}/${id}`, {\n      method: \"DELETE\"\n    });\n    fetchTasks();\n  };\n  useEffect(() => {\n    fetchTasks();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Task Manager\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Title\",\n      value: title,\n      onChange: e => setTitle(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"Description\",\n      value: description,\n      onChange: e => setDescription(e.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createTask,\n      children: \"Add Task\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: task.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), \" - \", task.description, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => deleteTask(task._id),\n          children: \"\\u274C Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, this)]\n      }, task._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"jpG6WDcXLRFi9utC4IUzi5M8u7U=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","API_BASE","App","_s","tasks","setTasks","title","setTitle","description","setDescription","fetchTasks","res","fetch","data","json","createTask","method","headers","body","JSON","stringify","deleteTask","id","className","children","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","onClick","map","task","_id","_c","$RefreshReg$"],"sources":["C:/Users/sasho/task-manager/frontend/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport './App.css';\r\n\r\nconst API_BASE = \"http://localhost:5000/api/tasks\";\r\n\r\nfunction App() {\r\n  const [tasks, setTasks] = useState([]);\r\n  const [title, setTitle] = useState('');\r\n  const [description, setDescription] = useState('');\r\n\r\n  // Fetch tasks\r\n  const fetchTasks = async () => {\r\n    const res = await fetch(API_BASE);\r\n    const data = await res.json();\r\n    setTasks(data);\r\n  };\r\n\r\n  // Create task\r\n  const createTask = async () => {\r\n    await fetch(API_BASE, {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({ title, description })\r\n    });\r\n    setTitle('');\r\n    setDescription('');\r\n    fetchTasks();\r\n  };\r\n\r\n  // Delete task\r\n  const deleteTask = async (id) => {\r\n    await fetch(`${API_BASE}/${id}`, {\r\n      method: \"DELETE\",\r\n    });\r\n    fetchTasks();\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchTasks();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Task Manager</h1>\r\n\r\n      <input\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={e => setTitle(e.target.value)}\r\n      />\r\n      <input\r\n        placeholder=\"Description\"\r\n        value={description}\r\n        onChange={e => setDescription(e.target.value)}\r\n      />\r\n      <button onClick={createTask}>Add Task</button>\r\n\r\n      <ul>\r\n        {tasks.map(task => (\r\n          <li key={task._id}>\r\n            <strong>{task.title}</strong> - {task.description}\r\n            <button onClick={() => deleteTask(task._id)}>‚ùå Delete</button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n \r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}